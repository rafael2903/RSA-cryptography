import rsa

def create_private_key_pem(n, e, d, p, q):
    private_key = rsa.PrivateKey(
        n=n,
        e=e,
        d=d,
        p=p,
        q=q,
    )
    private_key_pem = private_key.save_pkcs1().decode('utf-8')
    return private_key_pem

# Exemplo de uso:
n = 8984425108753118367630545303224878615017504186707519099154999966081357765984265929504958836362912516781713467544556635444260062766802417582494158278743387404647886728236047810186453889058211870227911230983938555688050326632458725037692390046799891086585438870636209303634136675779138141130694950238366572489702388758322536715573165192230174269314842914975907909058691695229376486963149982934037941587475595792955363906658941537116848857062111079207059455678031558262888172875737263464554483144517189181498466719510633730247560501565104902332295334071013310777985107666766006682267223849084110983101513110690824724299
e = 65537
d = 985715902804515367504435173630509915105811175062405578871321810949484431013646500629334186157288694543898086299750126591723102663890147578967533872856847215973406706847938166570025081315469280320096533412300802533187997645472478989386835508268578399571331813421581528626202921618328904861882388776312787097312746836172496566354264331767526754186069696047991125612936527213802325872386484598969354589337735004642248266311115076499657356963848977660343290944088011885679045027895853918024723092470312569980971897372279411738535230073563252806655304614933210072650664055176067924604591873152943531473727132991377306375
p = 6379195041622425369142492497299931683648911669737162968892620719775086417224226115701304270701484375632273471322011094711702453651728310017823058539
q = 140413094865676294342091225878314800736593930431432098264403291169507707643432651054915394068548147882889861091031759410986731246852998268870686017956424358662696298767243940438239438838530954562036859531107243613567898189683225098660359304171754937347147813922014307838057840865316006981826619672547852810357

private_key_pem = create_private_key_pem(n, e, d, p, q)
print(private_key_pem)


def create_public_key_pem(n, e):
    public_key = rsa.PublicKey(
        n=n,
        e=e,
    )
    public_key_pem = public_key.save_pkcs1().decode('utf-8')
    return public_key_pem

# Exemplo de uso:
n = 8984425108753118367630545303224878615017504186707519099154999966081357765984265929504958836362912516781713467544556635444260062766802417582494158278743387404647886728236047810186453889058211870227911230983938555688050326632458725037692390046799891086585438870636209303634136675779138141130694950238366572489702388758322536715573165192230174269314842914975907909058691695229376486963149982934037941587475595792955363906658941537116848857062111079207059455678031558262888172875737263464554483144517189181498466719510633730247560501565104902332295334071013310777985107666766006682267223849084110983101513110690824724299
e = 65537
public_key_pem = create_public_key_pem(n, e)
print(public_key_pem)

with open('public.pem', 'rb') as f:
    public_key_pem = f.read()
    public_key = rsa.PublicKey.load_pkcs1_openssl_pem(public_key_pem)
    print("openssl", public_key.n)

# with open('public_key.pem', 'rb') as f:
#     public_key_pem = f.read()
#     public_key = rsa.PublicKey.load_pkcs1_openssl_pem(public_key_pem)
#     print("openssl", public_key.n)
